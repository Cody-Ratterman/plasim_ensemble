#!/bin/bash

# This script was made by Cody Ratterman for additional post-processing
# of climate study ensembles created by the "ensemble_plasim_run" script.
# ---------------------------------------------------------------- #
# ------------ Set inital and final run numbers here. ------------ #
# ---------------------------------------------------------------- #
STARTNUM=1 # number for first run
           # start at 1 for plotting compatibility

# Setting ENDNUM to -1 allows script to count directories with "ensembleRun.*" pattern.          
ENDNUM=-1   # number for final run
            # STARTNUM < ENDNUM < 100 

# ---------------------------------------------------------------- #
# ---------------------------------------------------------------- #

main() {
    if [ $ENDNUM -eq -1 ]
    then
        ENDNUM=`ls -d ./ensembleRun.* | wc -l`
    fi

    echo "First Run: $STARTNUM"
    echo "Final Run: $ENDNUM"
    echo "Run Count: `expr $ENDNUM - $STARTNUM + 1`"

    if { [ $STARTNUM -eq 0 ] || [ $STARTNUM -eq 1 ]; }
    then
        echo "Ensemble Post Process Status" > ensemble_PPstatus.txt  # Overwrite status file
    else
        echo "Ensemble Post Process Status" >> ensemble_PPstatus.txt # Append to status file
    fi

    date >> ensemble_PPstatus.txt  # Show start date/time
    
    for (( num=$STARTNUM; num<=$ENDNUM; num++ )); do # loop for each run number from STARTNUM to ENDNUM
        ENSEMBLEDIR=$(printf 'ensembleRun.%02d' $num) # new run directory name
        
        cd $ENSEMBLEDIR              # change run directory
        RUN_DIR=$PWD
         
        echo "ensemble run $num in progress" >> ../ensemble_PPstatus.txt
    
        SECTION_CNT=`ls -d ./section.* | wc -l`
        for (( SECTION_NUM=1; SECTION_NUM<=$SECTION_CNT; SECTION_NUM++)); do
            DIRNAME=`printf 'section.%02d' $SECTION_NUM`
            tar -xf $(printf '%s.tar.gz' $DIRNAME)   # unzip section
            post_process
            clean_up
        done
        
        cd ..                           # exit current run directory
        echo "ensemble run $num fully completed" >> ensemble_PPstatus.txt # append to status file
        date >> ensemble_status.txt # Show recent model completion date/time
        echo $ENSEMBLEDIR
    done

    echo "end of PostProcess script"
}

# Run post processor on the previous section
post_process () {
    PP_Long_Sections=() # empty list
    
    # Define which sections should use supernova_PP_Long, all others use supernova_PP_Short
    PP_Long_Sections+=( 1 ) # first section
#     PP_Long_Sections+=( $CLIMA_SECTIONS ) # last climatology section
#     PP_Long_Sections+=( `expr $CLIMA_SECTIONS + 1` ) # first control section
#     PP_Long_Sections+=( `expr $CLIMA_SECTIONS + $CONTROL_SECTIONS` ) # last control case section
#     PP_Long_Sections+=( `expr $CLIMA_SECTIONS + $CONTROL_SECTIONS + 1` ) # first supernova case section
#     PP_Long_Sections+=( $TOTAL_SECTIONS ) # last section
    
    POSTPROCESSOR_DIR='../../postprocessor' # define postprocessor directory
    
    SECT_IN_PP_Long_Sections=false
    for sect in ${PP_Long_Sections[@]}; do
        if [ $SECTION_NUM -eq $sect ]
        then
            SECT_IN_PP_Long_Sections=true
            break
        fi
    done
    
    cd $POSTPROCESSOR_DIR
    if $SECT_IN_PP_Long_Sections # use post processing namelist wih more or less included data
    then
        ./burn7.x $RUN_DIR/$DIRNAME/$EXP.001 $RUN_DIR/PostProcessing/section.$SECTION_NUM < $RUN_DIR/../template/PostProcessing/PP_NL_Long > $RUN_DIR/PostProcessing/section.$SECTION_NUM.PP_output.txt
    else
        ./burn7.x $RUN_DIR/$DIRNAME/$EXP.001 $RUN_DIR/PostProcessing/section.$SECTION_NUM < $RUN_DIR/../template/PostProcessing/PP_NL_Short > $RUN_DIR/PostProcessing/section.$SECTION_NUM.PP_output.txt
    fi
}

# Return to run directory and tar previous section binary data files
clean_up () {
    cd $RUN_DIR
    tar -czf $(printf '%s.tar.gz' $DIRNAME) $DIRNAME
    rm -r $DIRNAME
}

# read command parameter(s) and call main function
[ $# == 1 ] && cd $1
main "$@"; exit
